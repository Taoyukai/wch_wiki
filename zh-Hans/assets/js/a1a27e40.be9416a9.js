"use strict";(self.webpackChunkwch_wiki=self.webpackChunkwch_wiki||[]).push([[6659],{3905:function(n,e,t){t.d(e,{Zo:function(){return C},kt:function(){return _}});var r=t(7294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function c(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var u=r.createContext({}),l=function(n){var e=r.useContext(u),t=e;return n&&(t="function"==typeof n?n(e):o(o({},e),n)),t},C=function(n){var e=l(n.components);return r.createElement(u.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},s=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,a=n.originalType,u=n.parentName,C=c(n,["components","mdxType","originalType","parentName"]),s=l(t),_=i,d=s["".concat(u,".").concat(_)]||s[_]||p[_]||a;return t?r.createElement(d,o(o({ref:e},C),{},{components:t})):r.createElement(d,o({ref:e},C))}));function _(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var a=t.length,o=new Array(a);o[0]=s;var c={};for(var u in e)hasOwnProperty.call(e,u)&&(c[u]=e[u]);c.originalType=n,c.mdxType="string"==typeof n?n:i,o[1]=c;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}s.displayName="MDXCreateElement"},8342:function(n,e,t){t.r(e),t.d(e,{assets:function(){return C},contentTitle:function(){return u},default:function(){return _},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return p}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),o=["components"],c={sidebar_position:6,description:"\u8bbe\u7f6eRTC\u81ea\u52a8\u5524\u9192MCU"},u="RTC\u81ea\u52a8\u5524\u9192",l={unversionedId:"MCU+/CH32V307/\u7535\u6e90\u63a7\u5236/RTC\u81ea\u52a8\u5524\u9192",id:"MCU+/CH32V307/\u7535\u6e90\u63a7\u5236/RTC\u81ea\u52a8\u5524\u9192",title:"RTC\u81ea\u52a8\u5524\u9192",description:"\u8bbe\u7f6eRTC\u81ea\u52a8\u5524\u9192MCU",source:"@site/docs/MCU+/CH32V307/02_\u7535\u6e90\u63a7\u5236/06_RTC\u81ea\u52a8\u5524\u9192.md",sourceDirName:"MCU+/CH32V307/02_\u7535\u6e90\u63a7\u5236",slug:"/MCU+/CH32V307/\u7535\u6e90\u63a7\u5236/RTC\u81ea\u52a8\u5524\u9192",permalink:"/zh-Hans/docs/MCU+/CH32V307/\u7535\u6e90\u63a7\u5236/RTC\u81ea\u52a8\u5524\u9192",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,description:"\u8bbe\u7f6eRTC\u81ea\u52a8\u5524\u9192MCU"},sidebar:"MCU",previous:{title:"\u4f4e\u529f\u8017\u4e4b\u5f85\u673a\u6a21\u5f0f",permalink:"/zh-Hans/docs/MCU+/CH32V307/\u7535\u6e90\u63a7\u5236/\u4f4e\u529f\u8017\u4e4b\u5f85\u673a\u6a21\u5f0f"},next:{title:"03_\u590d\u4f4d\u3001\u6269\u5c55\u548c\u65f6\u949f\u63a7\u5236(RCC)",permalink:"/zh-Hans/docs/category/03_\u590d\u4f4d\u6269\u5c55\u548c\u65f6\u949f\u63a7\u5236rcc"}},C={},p=[{value:"1. RTC\u5524\u9192\u914d\u7f6e",id:"1-rtc\u5524\u9192\u914d\u7f6e",level:2},{value:"2. \u53c2\u8003\u4ee3\u7801",id:"2-\u53c2\u8003\u4ee3\u7801",level:2}],s={toc:p};function _(n){var e=n.components,t=(0,i.Z)(n,o);return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"rtc\u81ea\u52a8\u5524\u9192"},"RTC\u81ea\u52a8\u5524\u9192"),(0,a.kt)("p",null,"RTC\uff0cReal Time Clock\uff0c\u5b9e\u65f6\u65f6\u949f\uff0c\u53ef\u4ee5\u5728\u4e0d\u9700\u8981\u5916\u90e8\u4e2d\u65ad\u7684\u60c5\u51b5\u4e0b\u5524\u9192\u4f4e\u529f\u8017\u6a21\u5f0f\u4e0b\u7684MCU\u3002"),(0,a.kt)("p",null,"RTC\u63d0\u4f9b\u7684\u5b9a\u65f6\u95f9\u949f\u4e8b\u4ef6\uff0c\u53ef\u4ee5\u5468\u671f\u6027\u7684\u5524\u9192MCU\u3002"),(0,a.kt)("h2",{id:"1-rtc\u5524\u9192\u914d\u7f6e"},"1. RTC\u5524\u9192\u914d\u7f6e"),(0,a.kt)("p",null,"RTC\u5524\u9192\u914d\u7f6e\u6b65\u9aa4\u5982\u4e0b\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u914d\u7f6eRTC\u65f6\u949f"),(0,a.kt)("li",{parentName:"ul"},"\u914d\u7f6e\u5916\u90e8\u4e2d\u65ad\u7ebf17\u4e3a\u4e0a\u5347\u6cbf\u89e6\u53d1"),(0,a.kt)("li",{parentName:"ul"},"\u5f00\u542fRTC\u95f9\u949f\u4e8b\u4ef6\u4e2d\u65ad")),(0,a.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"\u8be6\u7ec6\u7684 RTC \u914d\u7f6e\u53ef\u53c2\u8003 ",(0,a.kt)("a",{parentName:"p",href:"/docs/category/06_%E5%AE%9E%E6%97%B6%E6%97%B6%E9%92%9Frtc"},"RTC\u7ae0\u8282")))),(0,a.kt)("h2",{id:"2-\u53c2\u8003\u4ee3\u7801"},"2. \u53c2\u8003\u4ee3\u7801"),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("code",null,"\u53c2\u8003\u4ee3\u7801 - RTC\u5524\u9192\u505c\u6b62\u6a21\u5f0f")," "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},""))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("code",null,"\u53c2\u8003\u4ee3\u7801 - RTC\u5524\u9192\u5f85\u673a\u6a21\u5f0f")," "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'#include "debug.h"\n\nvoid rtc_exit17_init(void)\n{\n    EXTI_InitTypeDef EXTI_InitStructure = {0};\n    EXTI_ClearITPendingBit(EXTI_Line17);\n    EXTI_InitStructure.EXTI_Line = EXTI_Line17;\n    EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Event;\n    EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;\n    EXTI_InitStructure.EXTI_LineCmd = ENABLE;\n    EXTI_Init(&EXTI_InitStructure);\n\n}\n\nvoid rtc_init(void)\n{\n    RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR | RCC_APB1Periph_BKP, ENABLE);\n\n    PWR_BackupAccessCmd(ENABLE);\n    /* enable LSI */\n    RCC_LSICmd(ENABLE);  \n\n    /* wait for LSI to stabilize */\n    while (RCC_GetFlagStatus(RCC_FLAG_LSIRDY) == RESET);  \n\n    /* select LSI as rtc clock */\n    RCC_RTCCLKConfig(RCC_RTCCLKSource_LSI); \n    RCC_RTCCLKCmd(ENABLE);\n    RTC_WaitForLastTask();\n    RTC_WaitForSynchro();\n\n    /* enable Alarm interrupt */\n    RTC_ITConfig(RTC_IT_ALR, ENABLE);\n\n    RTC_WaitForLastTask();\n\n    /* set rtc prescaler value */\n    RTC_SetPrescaler(32767);  \n\n    RTC_WaitForLastTask();\n}\n\nint main(void)\n{\n\n   /* Configure unused GPIO as IPD to reduce power consumption */\n    GPIO_InitTypeDef GPIO_InitStructure = {0};   \n    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA|RCC_APB2Periph_GPIOB|\n             RCC_APB2Periph_GPIOC|RCC_APB2Periph_GPIOD|RCC_APB2Periph_GPIOE, ENABLE);\n    GPIO_InitStructure.GPIO_Pin = GPIO_Pin_All;\n    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;\n\n    GPIO_Init(GPIOA, &GPIO_InitStructure);\n    GPIO_Init(GPIOB, &GPIO_InitStructure);\n    GPIO_Init(GPIOC, &GPIO_InitStructure);\n    GPIO_Init(GPIOD, &GPIO_InitStructure);\n    GPIO_Init(GPIOE, &GPIO_InitStructure);\n    /***************************************/\n\n\n    Delay_Init();\n    USART_Printf_Init(256000);\n\n    rtc_init();\n    rtc_exit17_init();\n\n    printf("ch32v307 standby mode wakeup by rtc test\\r\\n");\n    Delay_Ms(2000);\n    \n    /* set alarm event after 5s */\n    RTC_SetAlarm(RTC_GetCounter()+5);\n    RTC_WaitForLastTask();\n\n    /* set PWR register, need enable rcc of pwr */\n    RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR, ENABLE); \n\n    /* standby mode, mcu will reset after wakeup event */\n    PWR_EnterSTANDBYMode();\n\n    printf("wakeup\\r\\n");\n\n    while(1)\n    {\n        printf("run in main loop\\r\\n");\n        Delay_Ms(1000);\n    }\n}\n'))))}_.isMDXComponent=!0}}]);